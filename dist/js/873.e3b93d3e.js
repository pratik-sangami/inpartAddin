"use strict";(self["webpackChunkmy_add_in"]=self["webpackChunkmy_add_in"]||[]).push([[873],{3873:function(e,t,r){r.r(t),r.d(t,{NestedAppAuthController:function(){return f}});var n=r(2891),o=r(5104),s=r(8574),i=r(5289),a=r(6451),c=r(8602),u=r(1140),d=r(13),p=r(5741),l=r(2445),h=r(4664),A=r(6051),g=r(4115),E=r(6730);
/*! @azure/msal-browser v3.13.0 2024-04-11 */
function C(e){return void 0!==e.status}
/*! @azure/msal-browser v3.13.0 2024-04-11 */
const m={UserInteractionRequired:"USER_INTERACTION_REQUIRED",UserCancel:"USER_CANCEL",NoNetwork:"NO_NETWORK",TransientError:"TRANSIENT_ERROR",PersistentError:"PERSISTENT_ERROR",Disabled:"DISABLED",AccountUnavailable:"ACCOUNT_UNAVAILABLE",NestedAppAuthUnavailable:"NESTED_APP_AUTH_UNAVAILABLE"};
/*! @azure/msal-browser v3.13.0 2024-04-11 */
class v{constructor(e,t,r,n){this.clientId=e,this.clientCapabilities=t,this.crypto=r,this.logger=n}toNaaTokenRequest(e){let t;t=void 0===e.extraQueryParameters?new Map:new Map(Object.entries(e.extraQueryParameters));const r=new c.W,n=r.addClientCapabilitiesToClaims(e.claims,this.clientCapabilities),o=e.scopes||u.aZ,s={platformBrokerId:e.account?.homeAccountId,clientId:this.clientId,authority:e.authority,scope:o.join(" "),correlationId:void 0!==e.correlationId?e.correlationId:this.crypto.createNewGuid(),claims:d.$.isEmptyObj(n)?void 0:n,state:e.state,authenticationScheme:e.authenticationScheme||u.IO.BEARER,extraParameters:t};return s}fromNaaTokenResponse(e,t,r){if(!t.token.id_token||!t.token.access_token)throw(0,p.SB)(l.Bh);const n=new Date(1e3*(r+(t.token.expires_in||0))),o=h.My(t.token.id_token,this.crypto.base64Decode),s=this.fromNaaAccountInfo(t.account,o),i=t.token.scope||e.scope,a={authority:t.token.authority||s.environment,uniqueId:s.localAccountId,tenantId:s.tenantId,scopes:i.split(" "),account:s,idToken:t.token.id_token,idTokenClaims:o,accessToken:t.token.access_token,fromCache:!0,expiresOn:n,tokenType:e.authenticationScheme||u.IO.BEARER,correlationId:e.correlationId,extExpiresOn:n,state:e.state};return a}fromNaaAccountInfo(e,t){const r=t||e.idTokenClaims,n=e.localAccountId||r?.oid||r?.sub||"",o=e.tenantId||r?.tid||"",s=e.homeAccountId||`${n}.${o}`,i=e.username||r?.preferred_username||"",a=e.name||r?.name,c={homeAccountId:s,environment:e.environment,tenantId:o,username:i,localAccountId:n,name:a,idToken:e.idToken,idTokenClaims:r};return c}fromBridgeError(e){if(!C(e))return new E.lR("unknown_error","An unknown error occurred");switch(e.status){case m.UserCancel:return new p.eB(l.fn);case m.NoNetwork:return new p.eB(l.l7);case m.AccountUnavailable:return new p.eB(l.rk);case m.Disabled:return new p.eB(l.CN);case m.NestedAppAuthUnavailable:return new p.eB(e.code||l.CN,e.description);case m.TransientError:case m.PersistentError:return new A.g(e.code,e.description);case m.UserInteractionRequired:return new g.CB(e.code,e.description);default:return new E.lR(e.code,e.description)}}}
/*! @azure/msal-browser v3.13.0 2024-04-11 */
const k={unsupportedMethod:{code:"unsupported_method",desc:"The PKCE code challenge and verifier could not be generated."}};class I extends E.lR{constructor(e,t){super(e,t),Object.setPrototypeOf(this,I.prototype),this.name="NestedAppAuthError"}static createUnsupportedError(){return new I(k.unsupportedMethod.code,k.unsupportedMethod.desc)}}var w=r(8035),T=r(2413);
/*! @azure/msal-browser v3.13.0 2024-04-11 */
class f{constructor(e){this.operatingContext=e;const t=this.operatingContext.getBridgeProxy();if(void 0===t)throw new Error("unexpected: bridgeProxy is undefined");this.bridgeProxy=t,this.config=e.getConfig(),this.logger=this.operatingContext.getLogger(),this.performanceClient=this.config.telemetry.client,this.browserCrypto=e.isBrowserEnvironment()?new a.M(this.logger,this.performanceClient):n.j,this.eventHandler=new w.J(this.logger,this.browserCrypto),this.nestedAppAuthAdapter=new v(this.config.auth.clientId,this.config.auth.clientCapabilities,this.browserCrypto,this.logger)}getBrowserStorage(){throw I.createUnsupportedError()}getEventHandler(){return this.eventHandler}static async createController(e){const t=new f(e);return Promise.resolve(t)}initialize(){return Promise.resolve()}ensureValidRequest(e){return e?.correlationId?e:{...e,correlationId:this.browserCrypto.createNewGuid()}}async acquireTokenInteractive(e){const t=this.ensureValidRequest(e);this.eventHandler.emitEvent(T.B.ACQUIRE_TOKEN_START,i.X8.Popup,t);const r=this.performanceClient.startMeasurement(o.MX.AcquireTokenPopup,t.correlationId);r?.add({nestedAppAuthRequest:!0});try{const e=this.nestedAppAuthAdapter.toNaaTokenRequest(t),n=s._C(),o=await this.bridgeProxy.getTokenInteractive(e),a=this.nestedAppAuthAdapter.fromNaaTokenResponse(e,o,n);return this.operatingContext.setActiveAccount(a.account),this.eventHandler.emitEvent(T.B.ACQUIRE_TOKEN_SUCCESS,i.X8.Popup,a),r.add({accessTokenSize:a.accessToken.length,idTokenSize:a.idToken.length}),r.end({success:!0,requestId:a.requestId}),a}catch(n){const e=this.nestedAppAuthAdapter.fromBridgeError(n);throw this.eventHandler.emitEvent(T.B.ACQUIRE_TOKEN_FAILURE,i.X8.Popup,null,n),r.end({success:!1},n),e}}async acquireTokenSilentInternal(e){const t=this.ensureValidRequest(e);this.eventHandler.emitEvent(T.B.ACQUIRE_TOKEN_START,i.X8.Silent,t);const r=this.performanceClient.startMeasurement(o.MX.SsoSilent,t.correlationId);r?.increment({visibilityChangeCount:0}),r?.add({nestedAppAuthRequest:!0});try{const e=this.nestedAppAuthAdapter.toNaaTokenRequest(t),n=s._C(),o=await this.bridgeProxy.getTokenSilent(e),a=this.nestedAppAuthAdapter.fromNaaTokenResponse(e,o,n);return this.operatingContext.setActiveAccount(a.account),this.eventHandler.emitEvent(T.B.ACQUIRE_TOKEN_SUCCESS,i.X8.Silent,a),r?.add({accessTokenSize:a.accessToken.length,idTokenSize:a.idToken.length}),r?.end({success:!0,requestId:a.requestId}),a}catch(n){const e=this.nestedAppAuthAdapter.fromBridgeError(n);throw this.eventHandler.emitEvent(T.B.ACQUIRE_TOKEN_FAILURE,i.X8.Silent,null,n),r?.end({success:!1},n),e}}async acquireTokenPopup(e){return this.acquireTokenInteractive(e)}acquireTokenRedirect(e){throw I.createUnsupportedError()}async acquireTokenSilent(e){return this.acquireTokenSilentInternal(e)}acquireTokenByCode(e){throw I.createUnsupportedError()}acquireTokenNative(e,t,r){throw I.createUnsupportedError()}acquireTokenByRefreshToken(e,t){throw I.createUnsupportedError()}addEventCallback(e){return this.eventHandler.addEventCallback(e)}removeEventCallback(e){this.eventHandler.removeEventCallback(e)}addPerformanceCallback(e){throw I.createUnsupportedError()}removePerformanceCallback(e){throw I.createUnsupportedError()}enableAccountStorageEvents(){throw I.createUnsupportedError()}disableAccountStorageEvents(){throw I.createUnsupportedError()}getAccount(e){throw I.createUnsupportedError()}getAccountByHomeId(e){const t=this.operatingContext.getActiveAccount();return void 0!==t&&t.homeAccountId===e?this.nestedAppAuthAdapter.fromNaaAccountInfo(t):null}getAccountByLocalId(e){const t=this.operatingContext.getActiveAccount();return void 0!==t&&t.localAccountId===e?this.nestedAppAuthAdapter.fromNaaAccountInfo(t):null}getAccountByUsername(e){const t=this.operatingContext.getActiveAccount();return void 0!==t&&t.username===e?this.nestedAppAuthAdapter.fromNaaAccountInfo(t):null}getAllAccounts(){const e=this.operatingContext.getActiveAccount();return void 0!==e?[this.nestedAppAuthAdapter.fromNaaAccountInfo(e)]:[]}handleRedirectPromise(e){return Promise.resolve(null)}loginPopup(e){return this.acquireTokenInteractive(e||i.uq)}loginRedirect(e){throw I.createUnsupportedError()}logout(e){throw I.createUnsupportedError()}logoutRedirect(e){throw I.createUnsupportedError()}logoutPopup(e){throw I.createUnsupportedError()}ssoSilent(e){return this.acquireTokenSilentInternal(e)}getTokenCache(){throw I.createUnsupportedError()}getLogger(){return this.logger}setLogger(e){this.logger=e}setActiveAccount(e){this.logger.warning("nestedAppAuth does not support setActiveAccount")}getActiveAccount(){const e=this.operatingContext.getActiveAccount();return void 0!==e?this.nestedAppAuthAdapter.fromNaaAccountInfo(e):null}initializeWrapperLibrary(e,t){}setNavigationClient(e){this.logger.warning("setNavigationClient is not supported in nested app auth")}getConfiguration(){return this.config}isBrowserEnv(){return this.operatingContext.isBrowserEnvironment()}getBrowserCrypto(){return this.browserCrypto}getPerformanceClient(){throw I.createUnsupportedError()}getRedirectResponse(){throw I.createUnsupportedError()}async clearCache(e){throw I.createUnsupportedError()}async hydrateCache(e,t){throw I.createUnsupportedError()}}}}]);
//# sourceMappingURL=873.e3b93d3e.js.map